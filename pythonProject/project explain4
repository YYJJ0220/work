【project 4】SM3的基本实现和相关长度扩展攻a击
   SM3 是一种基于Merkle-Damgard的加密函数，采用 256 位的输出哈希值，消息块大小为 512 位。
————SM3的基本实现
1.消息填充：将输入消息填充到接近块大小的倍数（512 位）的长度。
2.初始化参数：初始化八个 32 位初始值（IV）。
3.消息扩展：将每个 512 位的消息分组扩展为 132 个 32 位字。
4.压缩函数：使用布尔函数、非线性函数和循环移位等操作对每一个消息分组进行压缩。
5.输出哈希值：最终将所有块的压缩结果拼接起来，生成一个 256 位的哈希值。

————SM3长度扩展攻击
   在已知message与MAC的前提下，不需要已知key，只要知道key的长度，即可通过在message后添加信息计算来求得相应的MAC。
   因此，如果攻击者掌握了Hash(message)的值与message的长度，就可以在不知道message的情况下得到Hash(message||padding||message1)的值。
   代码说明如下：
1.随机生成一个消息m
2.对m进行SM3加密得到Hash
3.随机生成一个附加消息m_appenda
4.利用加密结束后的iv值作为初始向量，来加密m_append，得到hash猜测值
5.将消息进行填充并添加附加消息后再次进行加密得到hash计算值
6.比较hash猜测值与hash计算值，若相等，则攻击成功。

————Merkle Tree
   Merkle Tree是一种哈希树，用于编码大块的信息。 其中每个叶子节点都标有数据块的加密哈希值，而每个非叶子节点都标有其子节点的加密哈希值的标签。
   Merkle Tree的特别之处在于，这是一种自下而上建立的树，允许你验证某些值是否存在于树中，而不需要在树的每个元素上循环，这一特点非常有用。
